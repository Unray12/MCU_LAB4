/*
 * command_parser_fsm.c
 *
 *  Created on: Nov 18, 2023
 *      Author: PCPV
 */


#include "command_parser_fsm.h"

uint8_t temp = 0;
uint8_t index_buffer = 0;
uint8_t buffer_flag = 0;
uint32_t ADC_value = 0;
uint8_t buffer[MAX_BUFFER_SIZE];
uint8_t indexBuffer = 0;
char command[10];
char str[30];
void clearBuffer() {
	memset(buffer, 0, sizeof(buffer));
	index_buffer = 0;
}

void command_parser_fsm() {
	switch(status) {
		case INIT:
			if (temp == '!')
				status = RECEIVE_COMMAND;
			if (timerFlag[0] == 1) {
				status = WAITING;
				setTimer(0, 100);
			}
			break;
		case RECEIVE_COMMAND:
			if (temp == '#')
				status = CHECK_COMMAND;
			else if (temp == '!') {
				indexBuffer = 0;
			else if (indexBuffer >= 3) {
				indexBuffer = 0;
				status = INIT;
			}
			else {
				command[indexBuffer++] = temp;
			}
			break;
		case CHECK_COMMAND:
			if (commandCheck(command) == 1)
				status = RESPONSE_DATA;
			else if (commandCheck(command) == 2)
				status = END;
			else {
				status =INIT;
			}
			clearBuffer();
			break;
		default:
			break;
	}
}

void uart_communication_fsm() {
	switch (status) {
		case RESPONSE_DATA:
			HAL_ADC_Start(&hadc1);
			ADC_value = HAL_ADC_GetValue(&hadc1);
			HAL_ADC_Stop(&hadc1);
			sprintf((char *)str, "%s%u%s", "!ADC=", (long)ADC_value, "#\r\n");
			HAL_UART_Transmit(&huart2, (void*)str, sizeof(str), 50);

			setTimer(0, 100);

			status = INIT;

			break;
		case WAITING:

			HAL_UART_Transmit(&huart2, (void*)str, sizeof(str), 50);

			status = INIT;
			break;
		case END:
			sprintf((char*)str, "%s", "END\r\n");
			HAL_UART_Transmit(&huart2, (void*)str, sizeof(str), 50);
			status = END + 1;
			break;
		default:
			break;
	}
}
